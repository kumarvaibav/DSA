class Solution {
    public void rotate(int[][] matrix) {

     int n=matrix.length;

      //------------------Brute Approach----------------------

    /*  int[][] b=new int[n][n];

    //   copying element into the b[][]

        for(int i=0;i<n;i++)
        {
            for(int j=0;j<matrix[i].length;j++)
            {
               b[i][j]=matrix[i][j];
            }
        }

    //   copying b element into the matrix again using the logic

         for(int i=0;i<n;i++)
        {
            for(int j=0;j<matrix[i].length;j++)
            {
                 matrix[i][j]=b[n-j-1][i];
            }
        }

        */

         //----------------------optimal approach-------------------
   
        //first find the transpose of the matrix
        for(int i=0;i<n;i++)
        {
            for(int j=i;j<matrix[i].length;j++)
            {
                swap(matrix,i,j);
            }
        }
        
        //now swap the first and the last column of the matrix
         for(int i=0;i<n;i++)
        {
            for(int j=0;j<matrix[i].length/2;j++)
            {
                int temp=matrix[i][j];
                matrix[i][j]=matrix[i][n-j-1];
                matrix[i][n-j-1]=temp;
            }
        }
    }
    
    void swap(int[][] matrix ,int a,int b)
    {
        int temp=matrix[a][b];
        matrix[a][b]=matrix[b][a];
        matrix[b][a]=temp;
    }
}
