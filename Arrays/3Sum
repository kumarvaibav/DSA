class Solution {
    public List<List<Integer>> threeSum(int[] nums) {


        //-------------------brute force-----------------



        // 	Set<List<Integer>>list=new HashSet<>();
        // for(int i=0;i<nums.length-2;i++)
        // {
        //     for(int j=i+1;j<nums.length-1;j++)
        //     {
        //         for(int k=j+1;k<nums.length;k++)
        //         {
        //             if(nums[i]+nums[j]+nums[k]==0)
        //             {
        //                 List<Integer>temp=Arrays.asList(nums[i],nums[j],nums[k]);
        //                 temp.sort(null);
        //                 list.add(temp);
        //             }
        //         }
        //     }
        // }
        // List<List<Integer>>ans=new ArrayList<>(list);
        //  return ans;
 


        
        //------------------------better approach(Using Hashing)---------------


        Set<List<Integer>>list=new HashSet<>();
        for(int i=0;i<nums.length-1;i++)
        {
            Set<Integer>hashset=new HashSet<>();
            for(int j=i+1;j<nums.length;j++)
            {
                int third=-(nums[i]+nums[j]);
                if(hashset.contains(third))
                {
                    List<Integer>temp=Arrays.asList(nums[i],nums[j],third);
                    Collections.sort(temp);
                    list.add(temp);
                }
                else{
                    hashset.add(nums[j]);
                }
            }
        }
            return new ArrayList<>(list);





        //-------------------optimal Approach(Using 2Pointer Approach)---------------

        
       /* List<List<Integer>>list=new ArrayList<>();
        Arrays.sort(nums);
        for(int i=0;i<nums.length;i++)
        {
            if(i!=0 && nums[i]==nums[i-1])
               { 
                continue;
               }
            int j=i+1;
            int k=nums.length-1;
            while(j<k)
            {
                int sum=nums[i]+nums[j]+nums[k];
                if(sum<0)
                {
                    j++;
                }
                else if(sum>0)
                {
                    k--;
                }
                else{
                    List<Integer>temp=Arrays.asList(nums[i],nums[j],nums[k]);
                    list.add(temp);
                    j++;
                    k--;
                    while(j<k && nums[j]==nums[j-1])
                    j++;
                    while(j<k && nums[k]==nums[k+1])
                    k--;
                }
            }
        }
        return list;
        */
    }
}
