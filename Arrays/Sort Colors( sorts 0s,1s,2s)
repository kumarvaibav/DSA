class Solution {
    public void sortColors(int[] nums) {
        
        // Brute Approach=> Use any Sorting Algorithm or inbuilt sort method

        // Better Approach=>simply count the 0,1,2
        /*
        int count0=0;
        int count1=0;
        int count2=0;
        for(int i=0;i<nums.length;i++)   //counting 0,1,2
        { 
            if(nums[i]==0)
            {
                count0++;
            }
            else if(nums[i]==1)
            {
                count1++;
            }
            else{
                count2++;
            }
        }

    // arranging the 0,1,2
    for(int i=0;i<count0;i++)
    {
        nums[i]=0;
    }
    for(int i=count0;i<count0+count1;i++)
    {
        nums[i]=1;
    }
    for(int i=count0+count1;i<nums.length;i++)
    {
        nums[i]=2;
    }
*/


    // Optimal Approach
    // =>This problem is a variation of the popular Dutch National flag algorithm. 
    int mid=0,low=0,high=nums.length-1;
    while(mid<=high)
    {
        if(nums[mid]==0)
        {
            swap(nums,low,mid);
            low++;
            mid++;
        }
        else if(nums[mid]==1)
        {
            mid++;
        }
        else{
            swap(nums,mid,high);
            high--;
        }
    }
}
// swapping 
    void swap(int[] nums,int a,int b)
    {
        int temp=nums[a];
        nums[a]=nums[b];
        nums[b]=temp;
    }
}
