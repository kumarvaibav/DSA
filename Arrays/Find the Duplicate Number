class Solution {
    public int findDuplicate(int[] nums) {

//---------------------------------Using Linked List Cyclic Method-----------------------------------
        // int slow=nums[0];
        // int fast=nums[0];
        // do{
        //     slow=nums[slow];
        //     fast=nums[nums[fast]];
        // }while(slow!=fast);
        
        // fast=nums[0];
        // while(slow!=fast)
        // {
        //     slow=nums[slow];
        //     fast=nums[fast];
        // }
        // return fast;


 //---------------------------------Using Cyclic sort-----------------------------------------------------------

        int i=0;
        int n=nums.length;
        while(i<n)
        {
            int check=nums[i]-1;
            if(nums[i]!=nums[check])
            {
                int temp=nums[i];
                nums[i]=nums[check];
                nums[check]=temp;
            }
            else {
                i++;
            }
        }
        for(i=0;i<n;i++)
        {
            if(i+1!=nums[i])
            {
                return nums[i];
            }
        }
        return nums[i];
    }
}
