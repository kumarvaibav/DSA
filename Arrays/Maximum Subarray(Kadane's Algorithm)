class Solution {
    public int maxSubArray(int[] nums) {
      
      //Brute Approach
     /* int max=Integer.MIN_VALUE;
      for(int i=0;i<nums.length;i++)
      {
        for(int j=i;j<nums.length;j++)
        {
            int sum=0;
            for(int k=i;k<=j;k++)
            {
                sum+=nums[k];
            }
            max=Math.max(max,sum);
        }
      }
      return max;*/



     // Better Approach
     /* int max=Integer.MIN_VALUE;
      for(int i=0;i<nums.length;i++)
      {
        int sum=0;
        for(int j=i;j<nums.length;j++)
        {
            sum+=nums[j];
            max=Math.max(max,sum);
        }
      }
      return max;*/


      //Optimal Approach
      int csum=nums[0];
      int osum=nums[0];
      for(int i=1;i<nums.length;i++)
      {
        if(csum>=0)
        {
            csum+=nums[i];
        }
        else{
            csum=nums[i];
        }
        osum=Math.max(osum,csum);
      }
      return osum;
    }
}
