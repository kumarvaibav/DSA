class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {

        //-----------------Brute Approach------------

        // Set<List<Integer>>list=new HashSet<>();
        // int n=nums.length;
        // for(int i=0;i<n-3;i++)
        // {
        //     for(int j=i+1;j<n-2;j++)
        //     {
        //         for(int k=j+1;k<n-1;k++)
        //         {
        //             for(int l=k+1;l<n;l++)
        //             {
        //                 if(nums[i]+nums[j]+nums[k]+nums[l]==target)
        //                 {
        //                     List<Integer>temp=Arrays.asList(nums[i],nums[j],nums[k],nums[l]);
        //                     Collections.sort(temp);
        //                     list.add(temp);
        //                 }
        //             }
        //         }
        //     }
        // }
        // return new ArrayList<>(list);


        //-----------------------Better Approach-------------


        // Set<List<Integer>>list=new HashSet<>();
        // int n=nums.length;
        // for(int i=0;i<n;i++)
        // {
        //     for(int j=i+1;j<n;j++)
        //     {
        //          Set<Long>hashset=new HashSet<>();
        //         for(int k=j+1;k<n;k++)
        //         {
        //             long sum=nums[i]+nums[j];
        //             sum=sum+nums[k];
        //             long l=target-sum;
        //             if(hashset.contains(l))
        //             {
        //                 List<Integer>temp=Arrays.asList(nums[i],nums[j],nums[k],(int)l);
        //                 Collections.sort(temp);
        //                 list.add(temp);
        //             }
        //             else{
        //                 hashset.add((long)nums[k]);
        //             }
        //         }
        //     }
        // }
        // return new ArrayList<>(list);

        

        //-------------------Optimal Approach--------

        
        List<List<Integer>>list=new ArrayList<>();
        Arrays.sort(nums);
        int n=nums.length;
        for(int i=0;i<n;i++)
        {
            if(i!=0 && nums[i]==nums[i-1])
            {
                continue;
            }
            for(int j=i+1;j<n;j++)
            {
                if(j!=i+1 && nums[j]==nums[j-1])
                {
                    continue;
                }
                int k=j+1;
                int l=n-1;
                while(k<l)
                {
                    long sum=nums[i];
                    sum+=nums[j];
                    sum+=nums[k];
                    sum+=nums[l];
                    if(sum<target)
                    {
                        k++;
                    }
                    else if(sum>target)
                    {
                        l--;
                    }
                    else
                    {
                        List<Integer>temp=Arrays.asList(nums[i],nums[j],nums[k],nums[l]);
                        list.add(temp);
                        k++;
                        l--;
                        while(k<l && nums[k]==nums[k-1])k++;
                        while(k<l && nums[l]==nums[l+1])l--;
                    }
                }
            }
        }
        return list;
    }
}
