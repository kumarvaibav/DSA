/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        //---------------Simple using length approach------------------------

        /*
        int length=0;
        ListNode temp=head;
        while(temp!=null)
        {
            length++;
            temp=temp.next;
        }
      
      int l=length/2;
      temp=head;

      while(l>0)
      {
          temp=temp.next;
          l--;
      } 
      return temp;
      */

      //----------------------------------using fast slow pointer------------------

      ListNode slow=head;
      ListNode fast=head;

      while(fast!=null && fast.next!=null)
      {
          slow=slow.next;
          fast=fast.next.next;
      }
      return slow;
    }
}
